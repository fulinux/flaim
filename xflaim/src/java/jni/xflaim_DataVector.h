/* DO NOT EDIT THIS FILE - it is machine generated */
#include <jni.h>
/* Header for class xflaim_DataVector */

#ifndef _Included_xflaim_DataVector
#define _Included_xflaim_DataVector
#ifdef __cplusplus
extern "C" {
#endif
/*
 * Class:     xflaim_DataVector
 * Method:    _release
 * Signature: (J)V
 */
JNIEXPORT void JNICALL Java_xflaim_DataVector__1release
  (JNIEnv *, jobject, jlong);

/*
 * Class:     xflaim_DataVector
 * Method:    _setDocumentId
 * Signature: (JJ)V
 */
JNIEXPORT void JNICALL Java_xflaim_DataVector__1setDocumentId
  (JNIEnv *, jobject, jlong, jlong);

/*
 * Class:     xflaim_DataVector
 * Method:    _setID
 * Signature: (JIJ)V
 */
JNIEXPORT void JNICALL Java_xflaim_DataVector__1setID
  (JNIEnv *, jobject, jlong, jint, jlong);

/*
 * Class:     xflaim_DataVector
 * Method:    _setNameId
 * Signature: (JIIZZ)V
 */
JNIEXPORT void JNICALL Java_xflaim_DataVector__1setNameId
  (JNIEnv *, jobject, jlong, jint, jint, jboolean, jboolean);

/*
 * Class:     xflaim_DataVector
 * Method:    _setLong
 * Signature: (JIJ)V
 */
JNIEXPORT void JNICALL Java_xflaim_DataVector__1setLong
  (JNIEnv *, jobject, jlong, jint, jlong);

/*
 * Class:     xflaim_DataVector
 * Method:    _setString
 * Signature: (JILjava/lang/String;)V
 */
JNIEXPORT void JNICALL Java_xflaim_DataVector__1setString
  (JNIEnv *, jobject, jlong, jint, jstring);

/*
 * Class:     xflaim_DataVector
 * Method:    _setBinary
 * Signature: (JI[B)V
 */
JNIEXPORT void JNICALL Java_xflaim_DataVector__1setBinary
  (JNIEnv *, jobject, jlong, jint, jbyteArray);

/*
 * Class:     xflaim_DataVector
 * Method:    _setRightTruncated
 * Signature: (JI)V
 */
JNIEXPORT void JNICALL Java_xflaim_DataVector__1setRightTruncated
  (JNIEnv *, jobject, jlong, jint);

/*
 * Class:     xflaim_DataVector
 * Method:    _setLeftTruncated
 * Signature: (JI)V
 */
JNIEXPORT void JNICALL Java_xflaim_DataVector__1setLeftTruncated
  (JNIEnv *, jobject, jlong, jint);

/*
 * Class:     xflaim_DataVector
 * Method:    _clearRightTruncated
 * Signature: (JI)V
 */
JNIEXPORT void JNICALL Java_xflaim_DataVector__1clearRightTruncated
  (JNIEnv *, jobject, jlong, jint);

/*
 * Class:     xflaim_DataVector
 * Method:    _clearLeftTruncated
 * Signature: (JI)V
 */
JNIEXPORT void JNICALL Java_xflaim_DataVector__1clearLeftTruncated
  (JNIEnv *, jobject, jlong, jint);

/*
 * Class:     xflaim_DataVector
 * Method:    _isRightTruncated
 * Signature: (JI)Z
 */
JNIEXPORT jboolean JNICALL Java_xflaim_DataVector__1isRightTruncated
  (JNIEnv *, jobject, jlong, jint);

/*
 * Class:     xflaim_DataVector
 * Method:    _isLeftTruncated
 * Signature: (JI)Z
 */
JNIEXPORT jboolean JNICALL Java_xflaim_DataVector__1isLeftTruncated
  (JNIEnv *, jobject, jlong, jint);

/*
 * Class:     xflaim_DataVector
 * Method:    _getDocumentID
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_xflaim_DataVector__1getDocumentID
  (JNIEnv *, jobject, jlong);

/*
 * Class:     xflaim_DataVector
 * Method:    _getID
 * Signature: (JI)J
 */
JNIEXPORT jlong JNICALL Java_xflaim_DataVector__1getID
  (JNIEnv *, jobject, jlong, jint);

/*
 * Class:     xflaim_DataVector
 * Method:    _getNameId
 * Signature: (JI)I
 */
JNIEXPORT jint JNICALL Java_xflaim_DataVector__1getNameId
  (JNIEnv *, jobject, jlong, jint);

/*
 * Class:     xflaim_DataVector
 * Method:    _isAttr
 * Signature: (JI)Z
 */
JNIEXPORT jboolean JNICALL Java_xflaim_DataVector__1isAttr
  (JNIEnv *, jobject, jlong, jint);

/*
 * Class:     xflaim_DataVector
 * Method:    _isDataComponent
 * Signature: (JI)Z
 */
JNIEXPORT jboolean JNICALL Java_xflaim_DataVector__1isDataComponent
  (JNIEnv *, jobject, jlong, jint);

/*
 * Class:     xflaim_DataVector
 * Method:    _isKeyComponent
 * Signature: (JI)Z
 */
JNIEXPORT jboolean JNICALL Java_xflaim_DataVector__1isKeyComponent
  (JNIEnv *, jobject, jlong, jint);

/*
 * Class:     xflaim_DataVector
 * Method:    _getDataLength
 * Signature: (JI)I
 */
JNIEXPORT jint JNICALL Java_xflaim_DataVector__1getDataLength
  (JNIEnv *, jobject, jlong, jint);

/*
 * Class:     xflaim_DataVector
 * Method:    _getDataType
 * Signature: (JI)I
 */
JNIEXPORT jint JNICALL Java_xflaim_DataVector__1getDataType
  (JNIEnv *, jobject, jlong, jint);

/*
 * Class:     xflaim_DataVector
 * Method:    _getLong
 * Signature: (JI)J
 */
JNIEXPORT jlong JNICALL Java_xflaim_DataVector__1getLong
  (JNIEnv *, jobject, jlong, jint);

/*
 * Class:     xflaim_DataVector
 * Method:    _getString
 * Signature: (JI)Ljava/lang/String;
 */
JNIEXPORT jstring JNICALL Java_xflaim_DataVector__1getString
  (JNIEnv *, jobject, jlong, jint);

/*
 * Class:     xflaim_DataVector
 * Method:    _getBinary
 * Signature: (JI)[B
 */
JNIEXPORT jbyteArray JNICALL Java_xflaim_DataVector__1getBinary
  (JNIEnv *, jobject, jlong, jint);

/*
 * Class:     xflaim_DataVector
 * Method:    _outputKey
 * Signature: (JJIZ)[B
 */
JNIEXPORT jbyteArray JNICALL Java_xflaim_DataVector__1outputKey
  (JNIEnv *, jobject, jlong, jlong, jint, jboolean);

/*
 * Class:     xflaim_DataVector
 * Method:    _outputData
 * Signature: (JJI)[B
 */
JNIEXPORT jbyteArray JNICALL Java_xflaim_DataVector__1outputData
  (JNIEnv *, jobject, jlong, jlong, jint);

/*
 * Class:     xflaim_DataVector
 * Method:    _inputKey
 * Signature: (JJI[B)V
 */
JNIEXPORT void JNICALL Java_xflaim_DataVector__1inputKey
  (JNIEnv *, jobject, jlong, jlong, jint, jbyteArray);

/*
 * Class:     xflaim_DataVector
 * Method:    _inputData
 * Signature: (JJI[B)V
 */
JNIEXPORT void JNICALL Java_xflaim_DataVector__1inputData
  (JNIEnv *, jobject, jlong, jlong, jint, jbyteArray);

/*
 * Class:     xflaim_DataVector
 * Method:    _reset
 * Signature: (J)V
 */
JNIEXPORT void JNICALL Java_xflaim_DataVector__1reset
  (JNIEnv *, jobject, jlong);

#ifdef __cplusplus
}
#endif
#endif
